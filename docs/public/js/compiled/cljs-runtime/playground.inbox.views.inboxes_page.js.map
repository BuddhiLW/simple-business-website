{"version":3,"sources":["playground/inbox/views/inboxes_page.cljs"],"mappings":";;AAOA,mDAAA,nDAAMA;AAAN,AAEE,mBAAA,AAAAC,fAAMC,+BAAc,sDAAA,mFAAA,zIAACC;AAArB,AAAA,0FAAA,iDAAA,2HAAA,2CAAA,yDAAA,wBAAA,mFAAA,iGAAA,2CAAA,gEAAA,KAAA,0DAAA,OAAA,+DAAA,MAAA,0DAAA,IAAA,kDAAA,9rBAEIC,sSACGC,qaAKH,iBAAAC,qBAAA,yEAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBA27E6C,AAAA4B,sBAAAjC;IA37E7CM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,IAAAK,aAAA,AAAAC,eAAAP,gBAAAK;QAAA,AAAAG,4CAAAF,WAAA,IAAA,/DAAOgB;IAAPb,aAAA,AAAAD,4CAAAF,WAAA,IAAA;IAAAG,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAiBc;oBAAjB,AAAAZ,4CAAAF,eAAA,3EAAoBe;iBAApB,AAAAb,4CAAAF,eAAA,xEAAkCgB;AAAlC,AAAA,IACYC,uBAAe,iBAAA,hBAAGF;AAD9B,AAAA,AAAA,AAAAZ,uBAAAT,SAAA,oBAAA,gIAAA,2CAAA,mEAAA,gEAAA,6FAAA,qFAAA,6FAAA,2CAAA,oDAESoB,zkBACNI,yJAA6BL,+DACAC,2EACAG,4FACAF,gFACAC;;AAPhC,eAAA,CAAApB,WAAA;;;;AAAA;;;;;AAAA,OAAAQ,qBAAA,AAAAC,gBAAAX,UAAA,AAAAY,+DAAA,AAAAC,qBAAArB;;AAAA,OAAAkB,qBAAA,AAAAC,gBAAAX,UAAA;;;AAAA,IAAAc,aAAA,AAAAC,gBAAAvB;QAAA,AAAAa,4CAAAS,WAAA,IAAA,/DAAOK;IAAPH,aAAA,AAAAX,4CAAAS,WAAA,IAAA;IAAAE,iBAAA,AAAAT,4BAAAS;SAAA,AAAAR,4CAAAQ,eAAA,hEAAiBI;oBAAjB,AAAAZ,4CAAAQ,eAAA,3EAAoBK;iBAApB,AAAAb,4CAAAQ,eAAA,xEAAkCM;AAAlC,AAAA,IACYC,uBAAe,iBAAA,hBAAGF;AAD9B,AAAA,OAAAJ,eAAA,oBAAA,gIAAA,2CAAA,mEAAA,gEAAA,6FAAA,qFAAA,6FAAA,2CAAA,gEAAA,AAAAL,+DAAA,AAAAM,eAAA1B,1FAES4B,zkBACNI,yJAA6BL,+DACAC,2EACAG,4FACAF,gFACAC;;;AAPhC;;;;GAAA,KAAA;;AAAA,AAAA,OAAA/B,mBAAgDJ","names":["playground.inbox.views.inboxes-page/inboxes-page","cljs.core/deref","user-inboxes","re_frame.core.subscribe","playground.components.page-nav/page-nav","js/module$node_modules$$mui$material$node$index.Grid","iter__5523__auto__","s__60192","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__60194","cljs.core/chunk-buffer","i__60193","vec__60200","cljs.core/-nth","cljs.core.nth","map__60203","cljs.core/--destructure-map","cljs.core.get","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__60191","cljs.core/chunk-rest","vec__60208","cljs.core/first","map__60211","cljs.core/cons","cljs.core/rest","k","id","notifications","updated-at","notifications?","playground.inbox.views.inbox-card/inbox-card","cljs.core/chunk-first"],"sourcesContent":["(ns playground.inbox.views.inboxes-page\n  (:require\n   [\"@mui/material\" :refer [Grid Box]]\n   [playground.components.page-nav :refer [page-nav]]\n   [playground.inbox.views.inbox-card :refer [inbox-card]]\n   [re-frame.core :as rf]))\n\n(defn inboxes-page\n  []\n  (let [user-inboxes @(rf/subscribe [:user/inboxes])]\n    [:<>\n     [page-nav {:center \"Inbox\"}]\n     [:> Grid {:container true\n               :display \"flex\"\n               :direction \"row\"\n               :spacing 2\n               :pl 20}\n      (for [[k {:keys [id notifications updated-at]}] user-inboxes\n            :let [notifications? (> notifications 0)]]\n        ^{:key id}\n        [inbox-card {:user-email      k\n                     :inbox-id        id\n                     :notifications?  notifications?\n                     :notifications   notifications\n                     :updated-at      updated-at}]\n        #_[:ul\n           (for [inbox user-inboxes]\n             ^{:key (:id inbox)}\n             [:li\n              [:a {:href (str \"/inbox/\" (:id inbox))}\n               (:name inbox)]])])]]))\n"]}