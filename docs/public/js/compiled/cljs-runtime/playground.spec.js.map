{"version":3,"sources":["playground/spec.cljs"],"mappings":"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","names":["playground.spec/check-and-throw","a-spec","db","cljs.spec.alpha.valid_QMARK_","js/console.log","cljs.spec.alpha/explain-str","cljs.spec.alpha/def-impl","cljs.spec.alpha/nilable-impl","cljs.spec.alpha.every_impl","cljs.spec.alpha.tuple_impl","i__14727__auto__","v__14728__auto__","cljs.core.nth","cljs.core/map?","G__45552","cljs.core/keyword?","cljs.core/string?","G__45553","cljs.core/number?","cljs.spec.alpha/map-spec-impl","G__45554","cljs.core/contains?","G__45555","cljs.core/vector?","G__45556","cljs.core/set?","G__45557","G__45558","G__45559","cljs.core/boolean?","G__45560","G__45561","G__45562","G__45563","G__45564","G__45565","G__45566","G__45567","playground.spec/check-spec-interceptor","re-frame.core/after","cljs.core.partial"],"sourcesContent":["(ns playground.spec\n  (:require [cljs.spec.alpha :as s]\n            [re-frame.core :as rf]))\n\n(defn check-and-throw\n  [a-spec db]\n  (when-not (s/valid? a-spec db)\n    (js/console.log (s/explain-str a-spec db))))\n    ;; (throw (ex-info (str \"spec check faild: \" (s/explain-str a-spec db)) {}))))\n\n(s/def ::auth (s/nilable (s/map-of keyword? (s/nilable string?))))\n\n(s/def ::errors (s/map-of keyword? string?))\n\n(s/def :inbox.messages/message string?)\n(s/def :inbox.messages/auhtor string?)\n(s/def :inbox.messages/created-at number?)\n(s/def :inbox.messages/map (s/keys :req-un [:inbox.messages/message :inbox.messages/author :inbox.messages/created-at]))\n(s/def :inbox/messages (s/coll-of :inbox.messages/map :kind vector?))\n(s/def :inbox/participants (s/coll-of string? :kind set?))\n(s/def :inbox/map (s/keys :req-un [:inbox/participants :inbox/messages]))\n(s/def ::inboxes (s/map-of keyword? :inbox/map))\n\n(s/def ::nav (s/map-of keyword? (s/nilable keyword?)))\n\n(s/def :recipe/recipe_id keyword?)\n(s/def :recipe/public boolean?)\n(s/def :recipe/prep_time number?)\n(s/def :recipe/name string?)\n(s/def :recipe/img string?)\n(s/def :recipe/favorite_count number?)\n(s/def :recipe/uid string?)\n;; (s/def :recipe/ingredients map?)\n;; (s/def :recipe/steps map?)\n;; (s/def :recipe/price number?)\n(s/def :recipe/map (s/keys :req-un [:recipe/uid :recipe/public :recipe/prep_time :recipe/name]\n                           :opt-un [:recipe/img :recipe/favorite_count\n                                    :recipe/cook\n                                    :recipe/ingredients\n                                    :recipe/steps\n                                    :recipe/price]))\n(s/def ::recipes (s/map-of :recipe/recipe_id :recipe/map))\n\n(s/def :user.inbox/id keyword?)\n(s/def :user.inbox/updated-at number?)\n(s/def :user.inbox/notifications number?)\n(s/def :user/inbox (s/keys :req-un [:user.inbox/id :user.inbox/updated-at :user.inbox/notifications]))\n(s/def :user/uid string?)\n(s/def :user/profile (s/map-of keyword? string?))\n(s/def :user/role keyword?)\n(s/def :user/saved set?)\n(s/def :user/inboxes (s/map-of string? :user/inbox))\n(s/def :user/map (s/keys :req-un [:user/uid :user/profile :user/role :user/saved :user/inboxes]))\n(s/def ::users (s/map-of :user/uid :user/map))\n\n(s/def ::db (s/keys :req-un [::auth ::errors ::inboxes ::nav ::recipes ::users]))\n\n(def check-spec-interceptor (rf/after\n                             (partial check-and-throw ::db)))\n"]}