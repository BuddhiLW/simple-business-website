{"version":3,"sources":["playground/recipes/views/recipe_editor.cljs"],"mappings":"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","names":["p__49179","map__49181","cljs.core/--destructure-map","cljs.core.get","playground.recipes.views.recipe-editor/modal-recipe-editor","values","save","p1__49173#","p1__49174#","p1__49176#","playground.components.modal/modal","js/module$node_modules$$mui$material$node$index.Grid","G__49183","G__49184","cljs.core/deref","playground.components.form-group/form-group","cljs.core._EQ_","G__49186","G__49187","cljs.core.get_in","cljs.core.js__GT_clj","js/module$node_modules$$mui$material$node$index.colors","temp__5804__auto__","author?","re_frame.core.subscribe","js/module$node_modules$$mui$material$node$index.Button","js/confirm","re-frame.core/dispatch","G__49221","G__49222","playground.recipes.views.recipe-editor/recipe-editor","initial-values","reagent.core.atom","open-modal","p__49223","map__49224","modal-name","recipe","cljs.core/reset!","p__49241","map__49242","e","name","prep-time","clojure.string/blank?","playground.helpers/valid-number","map__49244","active-page","playground.utilites/color","js/module$node_modules$$mui$material$node$index.Typography","js/module$node_modules$$mui$material$node$index.IconButton","js/module$node_modules$$mui$icons_material$AddCircleOutline.default"],"sourcesContent":["(ns playground.recipes.views.recipe-editor\n  (:require\n   [\"@mui/icons-material/AddCircleOutline\" :default AddCircleOutlineIcon]\n   [\"@mui/material\" :refer [Button colors Grid IconButton Typography]]\n   [clojure.string :as str]\n   [playground.components.form-group :refer [form-group]]\n   [playground.components.modal :refer [modal]]\n   [playground.utilites :as util]\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [playground.helpers :as h]))\n\n(defn modal-recipe-editor\n  [{:keys [values save]}]\n  (modal {:modal-key :recipe-editor\n          :title \"Edit Recipe\"\n          :body\n          [:> Grid {:container true\n                    :p 5\n                    :pt 0\n                    :align-items \"center\"\n                    :justify-content \"center\"\n                    :class-name \"w-full\"}\n           [:form {:on-submit #(save % @values)\n                   :class-name \"w-full\"}\n                     ;; :min-width \"50vw\"}\n            [:> Grid {:display \"flex\"\n                      ;; :direction \"row\"\n                      :flex-direction \"row\"\n                      :justify-content \"center\"\n                      :align-items \"center\"\n                      :fullWidth true\n                      :class-name \"w-full\"\n                      :gap 3}\n             [:> Grid {:item true\n                       :xs 8}\n              [form-group {:id :name\n                           :label \"Name\"\n                           :type \"text\"\n                           :values values}]]\n             [:> Grid {:item true\n                       :xs 4}\n              [form-group {:id :prep-time\n                           :label \"Cooking time (min)\"\n                           :type \"number\"\n                           :values values\n                           :on-key-down #(when (= (.-which %) 13)\n                                           (save % @values))}]]]]]\n          :footer\n          [:> Grid {:display \"flex\"\n                    :flex-direction \"row\"\n                    :justify-content \"space-between\"\n                    :px 5\n                    :py 3\n                    :sx {:border-radius \"18px\"\n                         :box-shadow 10}\n                    :bgcolor (get-in (js->clj colors :keywordize-keys true) [:grey :100])}\n           (when-let [author? @(rf/subscribe [:recipes/recipe :author?])]\n             [:> Button {:variant \"contained\"\n                         :sx {:bgcolor (get-in (js->clj colors :keywordize-keys true) [:red :600])}\n                         :on-click #(when (js/confirm \"Are you sure?\")\n                                      (rf/dispatch [:recipe/delete-recipe]))}\n              \"Delete\"])\n           [:> Button {:variant \"contained\"\n                       :color \"warning\"\n                       :on-click #(rf/dispatch [:recipes/close-modal])}\n            \"Cancel\"]\n           [:> Button {:variant \"contained\"\n                       :color \"primary\"\n                       :on-click #(save % @values)}\n            \"Save\"]]}))\n\n(defn recipe-editor\n  []\n  (let [initial-values {:name \"\" :prep-time \"\"}\n        values (r/atom initial-values)\n        open-modal (fn [{:keys [modal-name recipe]}]\n                     (rf/dispatch [:recipes/open-modal modal-name])\n                     (reset! values recipe))\n        save (fn [e {:keys [name prep-time]}]\n               (.preventDefault e)\n               (when (and (not (str/blank? name))\n                          (h/valid-number prep-time))\n                 (rf/dispatch [:recipe/save-recipe {:name name :prep-time prep-time}])\n                 (reset! values initial-values)))]\n    (fn []\n      (let [{:keys [name prep-time] :as recipe} @(rf/subscribe [:recipes/recipe])\n            active-page @(rf/subscribe [:active-page])]\n        [:> Grid {:item true}\n         [modal-recipe-editor {:values values :save save}]\n         (if (= active-page :recipe)\n           [:> Grid {:sx\n                     {:color (util/color [:indigo :700])\n                      \"&:hover\" {:color (util/color [:pink :500])}}}\n            [:> Typography {:variant \"h2\"\n                            :as \"a\"\n                            :color \"inherit\"\n                            :justify-content \"center\"\n                            :font-size \"2.5rem\"\n                            :font-weight 700\n                            :on-click #(open-modal {:modal-name :recipe-editor\n                                                    :recipe recipe})}\n             (str name)]]\n           [:> IconButton {:on-click #(rf/dispatch [:recipes/open-modal :recipe-editor])}\n            [:> AddCircleOutlineIcon\n             {:color \"primary\"\n              :sx {:font-size \"2em\"}}]])]))))\n"]}