{"version":3,"sources":["playground/core.cljs"],"mappings":";;AA8DA,wBAAA,xBAAMA,wDACHC;AADH,AAEE,IAAAC,WAAMD;IAANC,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,0FAEsBE;;;KAFtB;AAAA,0FAGsBC;;;KAHtB;AAAA,0FAIsBC;;;KAJtB;AAAA,0FAOsBC;;;KAPtB;AAAA,0FASsBC;;;;AATtB,0FAaGF;;;;AAEL,uBAAA,vBAAOG;AAAP,AACE,kBAAA,AAAAC,dAAMC,8BAAa,sDAAA,mFAAA,zIAACC;AAApB,AAAA,0FAAA,mDAAA,mFAAA,gHAAA,mFAAA,0GAAA,2CAAA,uFAAA,mFAAA,iGAAA,2CAAA,4EAAA,0BAAA,kDAAA,UAAA,gEAAA,KAAA,iDAAA,2CAAA,uDAAA,QAAA,0DAAA,OAAA,wEAAA,yBAAA,wHAAA,6HAAA,x3CAEOC,mMACAC,8JAA0BC,iKACzBC,otBAMFC,wHASAjB,sBAAMW,uGACNO;;AAIR,yBAAA,zBAAOC;AAAP,AACE,wDAAA,jDAACC,oIAAoBX,6BAAM,oBAAA,pBAACY;;AAE9B,uBAAA,vBAAeC;AAAf,AAEE,AAACC;;AACD,AAAA,GAAA,AAAAC;AAAA,AAAA,AAAAC,0DAAA,AAAAf,gBAAA,EAAA,QAAAgB,0CAAAC,+CAAAC,iDAAA,AAAA,KAAAC,cAAA;AAAA,AAAAC;GAAA,AAAA,uQAAA,OAAA,OAAAC,oBAAA,mFAAA,iEAAA,mFAAAC,oEAAA,iFAAA;;AAAA;;AAAA,AAAAC,4BAAA,mFAAA;;AACA,OAACd;;;AAEH;;;;;4BAAA,5BAAwBe;AAAxB,AAKE,OAACf","names":["playground.core/pages","page-name","G__60186","cljs.core/Keyword","playground.auth.views.sign-up/sign-up","playground.auth.views.log-in/log-in","playground.become-a-chef.views.become-a-chef/become-a-chef","playground.recipes.views.recipes-page/recipes-page","playground.recipes.views.saved-page/saved-page","playground.core/main","cljs.core/deref","active-page","re_frame.core.subscribe","js/module$node_modules$$mui$material$node$index.CssBaseline","js/module$node_modules$$mui$material$node$index.ThemeProvider","playground.theme/theme","js/module$node_modules$$mui$material$node$index.Grid","playground.nav.views.nav/nav","playground.footer.views.footer/footer","playground.core/render","reagent.dom.render","goog.dom/getElement","playground.core/init","playground.router/start!","re-frame-flow.trace/dispatch-trace-enabled?","cljs.core.swap_BANG_","js/re-frame-flow","js/re-frame-flow.core","js/re-frame-flow.core.state*","cljs.core/Var","re-frame-flow.core/state*","cljs.core/update-in","clojure.set/union","re-frame.core/dispatch-sync","playground.core/re-render"],"sourcesContent":["(ns playground.core\n  (:require\n   ;;--- Iniciate/mount the application ---\n   [goog.dom :as gdom]\n   ;;--- theming with Material-UI ---\n   [\"@mui/material\" :as mui]\n   ;;--- main state: db ---\n   [playground.db]\n   ;;--- State manager ---\n   [re-frame-flow.macros :refer-macros [dispatch dispatch-sync]]\n   [re-frame.core :as rf]\n   [reagent.dom]\n   ;; [reagent.core :as r]\n   [playground.theme :refer [theme]]\n\n   ;; -----------------------------------------\n   ;;---- Bussiness logic for the front-end -------\n   ;; -----------------------------------------\n\n   ;--- auth ---\n   [playground.auth.views.profile :refer [profile]]\n   [playground.auth.views.sign-up :refer [sign-up]]\n   [playground.auth.views.log-in :refer [log-in]]\n   [playground.auth.events]\n   [playground.auth.subs]\n   ;--- become-a-chef ---\n   [playground.become-a-chef.views.become-a-chef :refer [become-a-chef]]\n   [playground.become-a-chef.events]\n   ;--- validation/errors ---\n   [playground.validation.events]\n   [playground.validation.subs]\n   ;--- inbox ---\n   [playground.inbox.events]\n   [playground.inbox.subs]\n   [playground.inbox.views.inboxes-page :refer [inboxes-page]]\n   [playground.inbox.views.inbox-page :refer [inbox-page]]\n   ;;--- nav ---\n   [playground.nav.views.nav :refer [nav]]\n   [playground.nav.events]\n   [playground.nav.subs]\n   ;--- recipes ---\n   [playground.recipes.views.recipes-page :refer [recipes-page]]\n   [playground.recipes.views.recipe-page :refer [recipe-page]]\n   [playground.recipes.views.saved-page :refer [saved-page]]\n   [playground.router :as router]\n   [playground.recipes.events]\n   [playground.recipes.subs]\n   ;--- upload-file ---\n   [playground.upload-file.views.upload-file-page :refer [upload-file-page]]\n   [playground.upload-file.events]\n   [playground.upload-file.subs]\n   ;--- stripe ---\n   [playground.stripe.views.stripe-example :refer [stripe-page]]\n   [playground.stripe.events]\n   ;--- free-paywall\n   [playground.free-paywall.views.free-paywall :refer [free-paywall-page]]\n   [playground.free-paywall.events]\n   ;--- footer ---\n   [playground.footer.views.footer :refer [footer]]))\n\n\n;; ---------- END requires ---------\n(defn pages\n  [page-name]\n  (case page-name\n    ;; :profile           [profile]\n    :sign-up           [sign-up]\n    :log-in            [log-in]\n    :become-a-chef     [become-a-chef]\n    ;; :inbox             [inbox-page]\n    ;; :inboxes           [inboxes-page]\n    :cursos            [recipes-page]\n    ;; :recipe            [recipe-page]\n    :saved             [saved-page]\n    ;; :stripe            [stripe-page]\n    ;; :upload-file       [upload-file-page]\n    ;; :free-paywall      [free-paywall-page]\n    [become-a-chef]))\n\n(defn- main []\n  (let [active-page @(rf/subscribe [:active-page])]\n    [:div\n     [:> mui/CssBaseline]\n     [:> mui/ThemeProvider {:theme theme}\n      [:> mui/Grid {:background-color \"primary.main-background\"\n                    :id \"wrapper\"\n                    :container true\n                    :sx {:width \"100vw\"\n                         :display \"flex\"\n                         :flex-direction \"column\"}}\n       [nav]\n       ;; [:> mui/Box {:py 1\n       ;;              :component \"nav\"\n       ;;              :variant \"dense\"\n       ;;              :fluid \"false\"\n       ;;              :display \"flex\"\n       ;;              :justify-content \"flex-end\"\n       ;;              :container \"true\"}\n       ;;  [:> mui/Box [nav]]]\n       [pages active-page]\n       [footer]]]]))\n\n;; -----------------------------------------------------------------------------\n;; Mount logic\n(defn- render []\n  (reagent.dom/render [main] (gdom/getElement \"app\")))\n\n(defn ^:export init\n  []\n  (router/start!)\n  (dispatch-sync [:initialize-db])\n  (render))\n\n(defn- ^:dev/after-load re-render\n  \"The `:dev/after-load` metadata causes this function to be called after\n  shadow-cljs hot-reloads code. This function is called implicitly by its\n  annotation.\"\n  []\n  (render))\n"]}