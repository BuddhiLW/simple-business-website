{"version":3,"sources":["playground/recipes/views/recipe_page.cljs"],"mappings":";;AAcA,mDAAA,nDAAMA;AAAN,AAEE;AAAA,AACE,aAAA,AAAAC,TAAMI,yBAAQ,sDAAA,mFAAA,zIAACC;oBAAf,AAAAL,hBACMM,gCAAS,sDAAA,mFAAA,zIAACD;iBADhB,AAAAL,bAEMO,6BAAY,sDAAA,mFAAA,zIAACF;uBAFnB,AAAAL,nBAGMQ,mCAAY,sDAAA,mFAAA,zIAACH;kBAHnB,AAAAL,dAIMS,8BAAO,sDAAA,mFAAA,zIAACJ;IAJdJ,aAKqBG;IALrBH,iBAAA,AAAAC,4BAAAD;WAAA,AAAAE,4CAAAF,eAAA,lEAKcS;AALd,AAAA,0FAAA,iDAAA,2HAAA,2CAAA,qZAAA,m4BAAA,32CAOIC,wIAAgB,8OAAA,sDAAA,lRAAI,qFAAA,8EAAA,lKAACJ,2CAAAA,kGAAAA,yPAGH,iCAAA,gJAAA,mFAAA,uGAAA,2CAAA,2DAAA,MAAA,uDAAA,UAAA,iDAAA,IAAA,4EAAA,SAAA,gEAAA,SAAA,mEAAA,5xBAAID,kGACDM,+LACGC,ygBAMHH,qEACJ,mCAAA,mFAAA,mGAAA,2CAAA,iDAAA,2CAAA,oSAAA,6IAAA,6DAAA,50BACE,AAACI,cAAIN,qJAAiBO,sPAAsB,0BAAA,mFAAA,uDAAA,pKAACC,8RACT,2BAAA,3BAACC;AAFvC,AAG2C,8BAAA,mFAAA,0EAAA,pLAACC;WAH5C,kBAAA,gCAAA,oJAAA,lLAKE,AAACJ,cAAIR,mGAAaa,mFAClB,iBAAAC,oBAAK,AAACN,cAAIL;AAAV,AAAA,GAAAW;AAAiBd;;AAAjBc;;MANF,mFAAA,mGAAA,2CAAA,2DAAA,YAAA,iDAAA,2CAAA,gSAAA,wJAAA,6DAAA,vvBAMiCL,6TACsB,0BAAA,mFAAA,oDAAA,jKAACC,0RACT,2BAAA,3BAACC;AARhD,AASoD,8BAAA,mFAAA,0EAAA,pLAACC;+OA5B1E,mFAAA,iGAAA,2CAAA,gEAAA,KAAA,2DAAA,2CAAA,gDAAA,IAAA,kDAAA,IAAA,gDAAA,aAAA,0DAAA,2CAAA,gDAAA,YAAA,+DAAA,2CAAA,iDAAA,SAAA,gDAAA,SAAA,kDAAA,SAAA,gDAAA,cAAA,4EAAA,2CAAA,iDAAA,SAAA,gDAAA,SAAA,kDAAA,SAAA,gDAAA,uBAAA,gDAAA,YAAA,4IAAA,h0DAmBqB,wBAAA,iCAAA,kJAAA,jKAWEZ,kGAAkBe,0NAClCC,i6CAcFC,4IACAC","names":["playground.recipes.views.recipe-page/recipe-page","cljs.core/deref","map__60197","cljs.core/--destructure-map","cljs.core.get","recipe","re_frame.core.subscribe","author?","active-nav","logged-in?","chef?","name","playground.components.page-nav/page-nav","playground.recipes.views.recipe-editor/recipe-editor","js/module$node_modules$$mui$material$node$index.Typography","cljs.core/not","js/module$node_modules$$mui$material$node$index.Button","playground.utilites/color","playground.router/path-for","re-frame.core/dispatch","playground.recipes.views.request-to-cook/request-to-cook","and__5043__auto__","playground.recipes.views.publish-recipe/publish-recipe","js/module$node_modules$$mui$material$node$index.Grid","playground.recipes.views.recipe-info/recipe-info","playground.recipes.views.recipe-steps/recipe-steps"],"sourcesContent":["(ns playground.recipes.views.recipe-page\n  (:require\n   [\"@mui/material\" :refer [Button Grid Typography]]\n   [playground.components.page-nav :refer [page-nav]]\n   [playground.nav.subs]\n   [playground.recipes.views.publish-recipe :refer [publish-recipe]]\n   [playground.recipes.views.recipe-editor :refer [recipe-editor]]\n   [playground.recipes.views.recipe-info :refer [recipe-info]]\n   [playground.recipes.views.recipe-steps :refer [recipe-steps]]\n   [playground.recipes.views.request-to-cook :refer [request-to-cook]]\n   [playground.router :as router]\n   [playground.utilites :as util]\n   [re-frame.core :as rf]))\n\n(defn recipe-page\n  []\n  (fn []\n    (let [recipe @(rf/subscribe [:recipes/recipe])\n          author? @(rf/subscribe [:recipe/author?])\n          active-nav @(rf/subscribe [:active-nav])\n          logged-in? @(rf/subscribe [:logged-in?])\n          chef? @(rf/subscribe [:auth/chef?])\n          {:keys [name]} recipe]\n      [:<>\n       [page-nav {:left (if (active-nav :saved)\n                          :saved\n                          :recipes)\n                  :center (if author?\n                            [recipe-editor]\n                            [:> Typography {:variant \"div\"\n                                            :color \"inherit\"\n                                            :py 5\n                                            :justify-content \"center\"\n                                            :font-size \"2.5rem\"\n                                            :font-weight 700}\n                             name])\n                  :right (cond\n                           (not logged-in?)  [:> Button {:sx {:bgcolor (util/color [:green :500])}\n                                                         :href (router/path-for :sign-up)\n                                                         :on-click #(rf/dispatch [:set-active-nav :sign-up])}\n                                              \"Sign up\"]\n                           (not author?)    [request-to-cook]\n                           (and (not chef?) author?)  [:> Button {:variant \"contained\"\n                                                                  :sx {:bgcolor (util/color [:pink :400])}\n                                                                  :href (router/path-for :become-a-chef)\n                                                                  :on-click #(rf/dispatch [:set-active-nav :become-a-chef])}\n                                                       \"Become a chef\"]\n                           author?          [publish-recipe])}]\n       [:> Grid {:container true\n                 :columns {:xs 6\n                           :sm 7\n                           :md 12}\n                 :spacing {:md 1}\n                 :direction {:sx \"column\"\n                             :xs \"column\"\n                             :sm \"column\"\n                             :md \"row\"}\n                 :justify-content {:sx \"center\"\n                                   :xs \"center\"\n                                   :sm \"center\"\n                                   :md \"space-evenly\"}\n                 :px 2}\n        [recipe-info]\n        [recipe-steps]]])))\n"]}