{"version":3,"sources":["playground/recipes/views/recipe_ingredients.cljs"],"mappings":"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","names":["p__50675","map__50676","cljs.core/--destructure-map","cljs.core.get","p1__50672#","p1__50673#","p1__50674#","playground.recipes.views.recipe-ingredients/ingredients-modal","save","values","playground.components.modal/modal","G__50677","G__50678","cljs.core/deref","js/module$node_modules$$mui$material$node$index.Grid","js/module$node_modules$$mui$material$node$index.FormControl","playground.components.form-group/form-group","cljs.core._EQ_","G__50679","G__50680","cljs.core.get_in","cljs.core.js__GT_clj","js/module$node_modules$$mui$material$node$index.colors","temp__5804__auto__","ingredient-id","js/module$node_modules$$mui$material$node$index.Button","js/confirm","re-frame.core/dispatch","G__50681","G__50682","p__50685","map__50686","playground.recipes.views.recipe-ingredients/ingredient-comp","id","name","amount","measure","ingredient","open-modal","author?","re_frame.core.subscribe","js/module$node_modules$$mui$material$node$index.Typography","js/module$node_modules$$mui$material$node$index.IconButton","G__50696","js/module$node_modules$$mui$icons_material$Create.default","js/module$node_modules$$mui$icons_material$DeleteOutline.default","p__50709","map__50710","playground.recipes.views.recipe-ingredients/header-ingredients","js/module$node_modules$$mui$material$node$index.Box","G__50713","js/module$node_modules$$mui$icons_material$AddCircleOutline.default","playground.recipes.views.recipe-ingredients/ingredients","initial-values","reagent.core.atom","p__50721","map__50722","modal-key","cljs.core/reset!","p__50723","map__50724","e","clojure.string/blank?","playground.helpers/valid-number","or__5045__auto__","cljs.core.keyword","cljs.core/random-uuid","clojure.string/trim","js/parseInt","ingredients","js/module$node_modules$$mui$material$node$index.Paper"],"sourcesContent":["(ns playground.recipes.views.recipe-ingredients\n  (:require\n   [\"@mui/icons-material/AddCircleOutline\" :default AddCircleOutlineIcon]\n   [\"@mui/icons-material/Create\" :default CreateIcon]\n   [\"@mui/icons-material/DeleteOutline\" :default DeleteOutlineIcon]\n   [\"@mui/material\" :refer [Box Button colors FormControl Grid IconButton\n                            Paper Typography]]\n   [clojure.string :as str]\n   [playground.components.form-group :refer [form-group]]\n   [playground.components.modal :refer [modal]]\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [playground.helpers :as h]))\n\n(defn ingredients-modal\n  [{:keys [save values]}]\n  [modal {:modal-key :ingredient-editor\n          :title \"Ingredient\"\n          :body\n          [:form {:on-submit #(save % @values)}\n           [:> Grid {:p 5\n                     :align-items \"center\"}\n            [:> FormControl  {:component \"fieldset\"\n                              :variant \"standard\"\n                              :fullWidth true\n                              :margin \"normal\"\n                              :size \"small\"}\n             [form-group {:id :name\n                          :label \"Name\"\n                          :type \"text\"\n                          :values values}]\n             [form-group {:id :amount\n                          :label \"Amount\"\n                          :type \"number\"\n                          :values values}]\n             [form-group {:id :measure\n                          :label \"Measure\"\n                          :type \"text\"\n                          :values values\n                          :on-key-down #(when (= (.-which %) 13)\n                                          (save % @values))}]]]]\n          :footer\n          [:> Grid {:display \"flex\"\n                    :flex-direction \"row\"\n                    :justify-content \"space-between\"\n                    :px 5\n                    :py 3\n                    :sx {:border-radius \"18px\"\n                         :box-shadow 10}\n                    :bgcolor (get-in (js->clj colors :keywordize-keys true) [:grey :100])}\n           (when-let [ingredient-id (:id @values)]\n             [:> Button {:variant \"contained\"\n                         :color \"warning\"\n                         :on-click #(when (js/confirm \"Are you sure?\")\n                                      (rf/dispatch [:recipe/delete-ingredient ingredient-id]))}\n              \"Delete\"])\n           [:> Button {:variant \"contained\"\n                       :color \"warning\"\n                       :on-click #(rf/dispatch [:recipes/close-modal])}\n            \"Cancel\"]\n           [:> Button {:variant \"contained\"\n                       :color \"primary\"\n                       :on-click #(save % @values)}\n            \"Save\"]]}])\n\n(defn ingredient-comp\n  [{:recipe/keys [id name amount measure] :as ingredient} open-modal]\n  (fn []\n    (let [author? @(rf/subscribe [:recipe/author?])]\n      [:<>\n       [:> Grid {:container true\n                 :p 2\n                 :m 1\n                 :mx 3\n                 :sx {:border-radius \"18px\"\n                      :box-shadow 10\n                      :bgcolor (get-in (js->clj colors :keywordize-keys true) [:grey :100])\n                      :justify-content \"space-between\"}}\n        [:> Grid {:item true\n                  :px 2\n                  :sx {:justify-content \"space-between\"}}\n         [:> Grid {:item true}\n          [:> Typography {:variant \"h5\"\n                          :font-weight 700\n                          :class-name \"text-slate-700\"}\n           name]]\n         [:> Grid {:item true}\n          [:> Typography {:variant \"body2\" :color \"text.secondary\"}\n           amount \" \" measure]]]\n        (when author?\n          [:> Grid {:item true\n                    :display \"flex\"\n                    :align-items \"right\"\n                    :flex-direction \"column\"}\n           [:> IconButton {:on-click #(open-modal {:modal-key :ingredient-editor\n                                                   :ingredient ingredient})}\n            [:> CreateIcon {:color \"primary\"\n                            :sx {:font-size \"2rem\"}}]]\n           [:> IconButton {:on-click #(when (js/confirm \"Are you sure you want to delete?\")\n                                        (rf/dispatch [:recipe/delete-ingredient id]))}\n            [:> DeleteOutlineIcon {:color \"warning\"\n                                   :sx {:font-size \"2rem\"}}]]])]])))\n\n(defn header-ingredients\n  [{:keys [open-modal values]}]\n  [:> Grid {:container true :spacing 2 :p 2}\n   [:> Typography {:p 2\n                   :variant \"h4\"\n                   :component \"h4\"\n                   :align \"center\"\n                   :font-weight 500\n                   :class-name \"text-slate-700\"}\n    \"Ingredients\"]\n   (when-let [author? @(rf/subscribe [:recipe/author?])]\n     [:> Box {:p 2}\n      [:> IconButton {:on-click #(open-modal {:modal-key :ingredient-editor\n                                              :ingredient values})\n                      :class-name \"text-slate-700\"}\n       [:> AddCircleOutlineIcon {:color \"primary\"\n                                 :sx {:font-size \"2rem\"}}]]])])\n\n(defn ingredients []\n  (let [initial-values {:id nil\n                        :name \"\"\n                        :amount \"\"\n                        :measure \"\"}\n        values (r/atom initial-values)\n        open-modal (fn [{:keys [modal-key ingredient]}]\n                     (rf/dispatch [:recipes/open-modal modal-key])\n                     (reset! values ingredient))\n        save (fn [e {:keys [id name amount measure]}]\n               (.preventDefault e)\n               (when (and (not (str/blank? name))\n                          (h/valid-number amount)\n                          (not (str/blank? measure)))\n                 (rf/dispatch [:recipe/save-ingredient {:id (or (keyword id) (keyword (str \"ingredient-\" (random-uuid))))\n                                                        :name (str/trim name)\n                                                        :amount (js/parseInt amount)\n                                                        :measure (str/trim measure)}])\n                 (reset! values initial-values)))]\n    (fn []\n      (let [ingredients @(rf/subscribe [:recipe/ingredients])\n            author? @(rf/subscribe [:recipe/author?])]\n        [:<>\n         (when author?\n           #_[ingredients-modal {:values values\n                                 :save save}])\n         [:> Box {:pt 2\n                  :display \"flex\"\n                  :class-name \"flex-wrap\"}\n          [:> Paper {:p 2 :variant \"outlined\"\n                     :pl 2\n                     :sx {:border-radius \"10px\"}\n                     :display \"flex\"\n                     :class-name \"flex-wrap\"}\n\n             ;; Header ingredients\n           #_[header-ingredients {:open-modal open-modal\n                                  :values initial-values}]\n             ;; Ingredients\n           [:> Grid {:container true :spacing 2\n                     :pl 2\n                     :border-radius \"10px\"\n                     :class-name \"flex-wrap\"\n                     :sx {:min-width 0\n                          :max-width \"600px\"}}\n            [:hr {:class-name \"w-full border-0 h-px my-2 bg-gray-200 dark:bg-gray-700\"}]\n            #_[:<>\n               (for [ingredient ingredients]\n                 ^{:key (:id ingredient)}\n                 [ingredient-comp ingredient open-modal])]]]]]))))\n\n              ;; Modal add a Ingredient\n"]}